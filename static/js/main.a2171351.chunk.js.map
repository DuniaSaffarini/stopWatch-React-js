{"version":3,"sources":["Stopwatch.js","App.js","reportWebVitals.js","index.js"],"names":["Stopwatch","state","TimerOn","counter","startTimer","setState","timer","setInterval","resetTimer","clearInterval","stopTimer","this","centiseconds","Math","floor","slice","seconds","minutes","hours","className","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NA0DeA,G,kNAvDbC,MAAQ,CACNC,SAAS,EACTC,QAAS,G,EAEXC,WAAa,WACX,EAAKC,SAAS,CACZH,SAAS,IAEX,EAAKI,MAAQC,aAAY,WACvB,EAAKF,SAAS,CACZF,QAAS,EAAKF,MAAME,QAAU,MAE/B,K,EAGLK,WAAa,WACX,EAAKH,SAAS,CACZH,SAAS,EACTC,QAAS,IAEXM,cAAc,EAAKH,Q,EAGrBI,UAAY,WACV,EAAKL,SAAS,CACZH,SAAS,IAEXO,cAAc,EAAKH,Q,uDAGX,IACAH,EAAYQ,KAAKV,MAAjBE,QACJS,GAAgB,IAAOC,KAAKC,MAAMX,EAAU,IAAM,KAAMY,OAAO,GAC/DC,GAAW,IAAOH,KAAKC,MAAMX,EAAU,KAAQ,IAAKY,OAAO,GAC3DE,GAAW,IAAOJ,KAAKC,MAAMX,EAAU,KAAS,IAAKY,OAAO,GAC5DG,GAAS,IAAML,KAAKC,MAAMX,EAAU,OAAUY,OAAO,GAEzD,OACE,sBAAKI,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,uBACA,sBAAKA,UAAU,oBAAf,UACGD,EADH,OACcD,EADd,OAC2BD,EAD3B,OACwCJ,MAEhB,IAAvBD,KAAKV,MAAMC,SACV,wBAAQkB,QAAST,KAAKP,WAAtB,oBAEsB,IAAvBO,KAAKV,MAAMC,SACV,wBAAQkB,QAAST,KAAKD,UAAtB,kBAGF,wBAAQU,QAAST,KAAKH,WAAtB,0B,GAnDgBa,cCgBTC,G,8KATX,OACE,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJUE,cCKHE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a2171351.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nclass Stopwatch extends Component {\r\n  state = {\r\n    TimerOn: false,\r\n    counter: 0,\r\n  };\r\n  startTimer = () => {\r\n    this.setState({\r\n      TimerOn: true,\r\n    });\r\n    this.timer = setInterval(() => {\r\n      this.setState({\r\n        counter: this.state.counter + 1,\r\n      });\r\n    }, 10);\r\n  };\r\n\r\n  resetTimer = () => {\r\n    this.setState({\r\n      TimerOn: false,\r\n      counter: 0,\r\n    });\r\n    clearInterval(this.timer);\r\n  };\r\n\r\n  stopTimer = () => {\r\n    this.setState({\r\n      TimerOn: false,\r\n    });\r\n    clearInterval(this.timer);\r\n  };\r\n\r\n  render() {\r\n    const { counter } = this.state;\r\n    let centiseconds = (\"0\" + (Math.floor(counter / 10) % 100)).slice(-2);\r\n    let seconds = (\"0\" + (Math.floor(counter / 1000) % 60)).slice(-2);\r\n    let minutes = (\"0\" + (Math.floor(counter / 60000) % 60)).slice(-2);\r\n    let hours = (\"0\" + Math.floor(counter / 3600000)).slice(-2);\r\n\r\n    return (\r\n      <div className=\"Stopwatch\">\r\n        <div className=\"Stopwatch-header\">Stopwatch</div>\r\n        <div className=\"Stopwatch-display\">\r\n          {hours}h : {minutes}m : {seconds}s : {centiseconds}\r\n        </div>\r\n        {this.state.TimerOn === false && (\r\n          <button onClick={this.startTimer}>Start</button>\r\n        )}\r\n        {this.state.TimerOn === true && (\r\n          <button onClick={this.stopTimer}>Stop</button>\r\n        )}\r\n\r\n        <button onClick={this.resetTimer}>Reset</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Stopwatch;\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport Stopwatch from \"./Stopwatch\";\n\n// eslint-disable-next-line no-unused-vars\nimport { fireEvent } from \"@testing-library/react\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Stopwatch />\n      </div>\n    );\n  }\n}\n//import { format } from \"prettier\";\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}